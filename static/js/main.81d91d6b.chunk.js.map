{"version":3,"sources":["components/Error.jsx","components/Clima.jsx","components/Formulario.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Clima","resultado","name","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Header","titulo","href","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d91d6b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ mensaje }) => {\n  return (\n    <div>\n        <p className=\"msg msg-error z-depth-3 scale-transition\">\n          {mensaje}\n        </p>\n    </div>\n  );\n};\n\nError.propTypes = {\n  mensaje : PropTypes.string.isRequired\n}\n\nexport default Error;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Clima = ({ resultado }) => {\n  \n  \n  // extraer los datos\n  const { name, main } = resultado;\n\n  // si no hay numbre retunr null\n  if (!name) return null;\n\n  // formula para pasar de kelvin a grados centigrados\n  const kelvin = 273.15;\n\n  return (\n    <div className=\"card-panel white col s12\">\n      <div className=\"black-text\">\n        <h2>El clima de {name} es: </h2>\n        <p className=\"temperatura\">\n          {parseFloat(main.temp - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n        <p>\n          Temperatura Máxima:\n          {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n        <p>\n          Temperatura Minima:\n          {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nClima.propTypes = {\n    resultado : PropTypes.object.isRequired\n}\n\nexport default Clima;\n","import { useState } from \"react\";\nimport Error from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\n \n  // state para error\n  const [error, guardarError] = useState(false);\n  //destructuring para extrar las propiedades\n  const { ciudad, pais } = busqueda;\n\n  const handleChange = (e) => {\n    guardarBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // validad\n    if (ciudad.trim() === \"\" || pais.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n    //guarda el error en false\n    guardarError(false);\n\n    guardarConsultar(true)\n  };\n\n  //cuando el usuario da submit al formulario\n  return (\n    <form onSubmit={handleSubmit}>\n      \n      {error ? <Error mensaje = \"¡Todos los campos son requeridos!\"/> : null}\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"ciudad\"\n          id=\"ciudad\"\n          value={ciudad}\n          onChange={\n            handleChange\n          } /* cuando el usuario le da submit, handle, \n        llama la funcion que guarda los datos en el state  */\n        />\n        <label htmlFor=\"ciudad\"> Ciudad:</label>\n      </div>\n\n      <div className=\"input-field col s12\">\n        <select name=\"pais\" id=\"pais\" value={pais} onChange={handleChange}>\n          <option value=\"\">--Seleccione un País--</option>\n          <option value=\"US\">Estados Unidos</option>\n          <option value=\"MX\">México</option>\n          <option value=\"AR\">Argentina</option>\n          <option value=\"CO\">Colombia</option>\n          <option value=\"CR\">Costa Rica</option>\n          <option value=\"ES\">España</option>\n          <option value=\"PE\">Perú</option>\n        </select>\n        <label htmlFor=\"pais\"> País:</label>\n      </div>\n      <div className=\"input-field col s12\">\n        <button\n          type=\"submit\"\n          className=\"waves-effect purple-text text-darken-2 waves-light  btn-large btn-block yellow accent-4 col s12\"\n        >\n          Buscar Clima\n        </button>\n      </div>\n    </form>\n  );\n};\nFormulario.propTypes = {\n  busqueda : PropTypes.object.isRequired,\n  guardarBusqueda : PropTypes.func.isRequired,\n  guardarConsultar: PropTypes.func.isRequired\n}\nexport default Formulario;","import PropTypes from \"prop-types\";\n\nconst Header = ({titulo}) => {\n    return ( \n      <nav>\n            <div className = 'nav-wrapper light-blue darken-2' >\n            <a href=\"#!\" className= \"brand-logo\">{titulo}</a>\n        </div>\n      </nav>\n     );\n}\n\nHeader.propTypes = {\n  titulo : PropTypes.string.isRequired\n}\n \nexport default Header;","import Error from \"./components/Error\";\nimport Clima from \"./components/Clima\";\nimport Formulario from \"./components/Formulario\";\nimport Header from \"./components/Header\";\nimport { Fragment, useState, useEffect } from \"react\";\n\nfunction App() {\n  // state\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: \"\",\n    pais: \"\",\n  });\n\n  // state de la consuta\n  const [consultar, guardarConsultar] = useState(false);\n\n  //state para el resultado\n  const [resultado, guardarResultado] = useState({});\n\n  //state para error cuando no encuentra ciudad\n  const [error, guardarError] = useState(false);\n\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarApi = async () => {\n      // si consultar es true ejecuta el codigo si no no ejecuta nada, ademas que inicia en false consultar\n      if (consultar) {\n        const appId = \"d84995d373a42e7c8a3d950ae80c6368\";\n\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}, ${pais}&appid=${appId}`;\n\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // detecta si hay resultados en la busqueda\n\n        if (resultado.cod === \"404\") {\n          guardarError(true);\n        } else {\n          guardarError(false);\n        }\n      }\n    };\n    consultarApi();\n    //eslint-disable-next-line\n  }, [consultar]);\n\n  // si hay un error\n  //carga condicional de componentes\n  let componente;\n\n  if(error) {\n    componente = <Error mensaje=\"No hay resultados :'(\"/>;\n  } else {\n    componente = <Clima resultado={resultado} />;\n  }\n\n  return (\n    <Fragment>\n      <Header titulo=\"Clima React Api\" />\n\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              {componente}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}